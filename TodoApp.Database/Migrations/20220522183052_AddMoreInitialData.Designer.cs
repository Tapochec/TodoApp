// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoApp.Database.Model;

#nullable disable

namespace TodoApp.Database.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    [Migration("20220522183052_AddMoreInitialData")]
    partial class AddMoreInitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TodoApp.Database.Model.ListGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ListGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Group 1",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TodoApp.Database.Model.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Completed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("CompletionDt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TaskListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaskListId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Completed = false,
                            Desc = "Desc1",
                            Name = "Task1",
                            TaskListId = 1
                        },
                        new
                        {
                            Id = 2,
                            Completed = false,
                            Desc = "Desc2",
                            Name = "Task2",
                            TaskListId = 1
                        },
                        new
                        {
                            Id = 3,
                            Completed = false,
                            Desc = "Desc3",
                            Name = "Task3",
                            TaskListId = 1
                        },
                        new
                        {
                            Id = 4,
                            Completed = false,
                            Desc = "Desc4",
                            Name = "Task4",
                            TaskListId = 2
                        },
                        new
                        {
                            Id = 5,
                            Completed = false,
                            Desc = "Desc5",
                            Name = "Task5",
                            TaskListId = 2
                        });
                });

            modelBuilder.Entity("TodoApp.Database.Model.TaskList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TaskGroupId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaskGroupId");

                    b.HasIndex("UserId");

                    b.ToTable("TaskLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "List1",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "List2",
                            TaskGroupId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TodoApp.Database.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "andrew@example.com",
                            Password = "qwe"
                        });
                });

            modelBuilder.Entity("TodoApp.Database.Model.ListGroup", b =>
                {
                    b.HasOne("TodoApp.Database.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TodoApp.Database.Model.Task", b =>
                {
                    b.HasOne("TodoApp.Database.Model.TaskList", "TaskList")
                        .WithMany()
                        .HasForeignKey("TaskListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskList");
                });

            modelBuilder.Entity("TodoApp.Database.Model.TaskList", b =>
                {
                    b.HasOne("TodoApp.Database.Model.ListGroup", "TaskGroup")
                        .WithMany()
                        .HasForeignKey("TaskGroupId");

                    b.HasOne("TodoApp.Database.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaskGroup");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
